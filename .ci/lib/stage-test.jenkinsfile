stage('test') {
    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd Pal/regression
                gramine-test build -v
                python3 -m pytest -v --junit-xml pal-regression.xml
            '''
        } finally {
            junit 'Pal/regression/pal-regression.xml'
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd LibOS/shim/test/regression
                RA_TYPE=epid RA_CLIENT_SPID=${ra_client_spid} gramine-test build -v
                python3 -m pytest -v --junit-xml libos-regression.xml
            '''
        } finally {
            junit 'LibOS/shim/test/regression/libos-regression.xml'
        }
    }

    if (env.CC != "clang") {
        timeout(time: 15, unit: 'MINUTES') {
            try {
                sh '''
                    export GRAMINE_MUSL=1
                    cd LibOS/shim/test/regression
                    # For some unknown reason it fails without this clean on sgx-18.04 pipeline
                    gramine-test clean
                    RA_TYPE=epid RA_CLIENT_SPID=${ra_client_spid} \
                        gramine-test -n tests_musl.toml build -v
                    python3 -m pytest -v --junit-xml libos-regression-musl.xml
                '''
            } finally {
                junit 'LibOS/shim/test/regression/libos-regression-musl.xml'
            }
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd LibOS/shim/test/abi/x86_64
                gramine-test build -v
                python3 -m pytest -v --junit-xml abi.xml
            '''
        } finally {
            junit 'LibOS/shim/test/abi/x86_64/*.xml'
        }
    }

    timeout(time: 15, unit: 'MINUTES') {
        try {
            sh '''
                cd LibOS/shim/test/fs
                gramine-test build -v
                python3 -m pytest -v --junit-xml fs.xml
            '''
        } finally {
            junit 'LibOS/shim/test/fs/*.xml'
        }
    }
}
